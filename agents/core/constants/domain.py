"""
Domain-Adaptive Constants
=========================

This module contains constants that should be learned from domain analysis and document
corpus. These have very high automation potential and should be generated by the
Domain Intelligence Agent based on corpus characteristics.

Key Interdependent Groups:
1. Entity Extraction Thresholds - learned from domain entity patterns
2. Document Processing Parameters - optimized from document characteristics
3. Search Quality Thresholds - derived from domain relevance patterns
4. Domain Classification Thresholds - learned from multi-domain analysis
5. Content Analysis Parameters - adapted to corpus characteristics

AUTO-GENERATION POTENTIAL: VERY HIGH
These work together as interdependent groups and should be optimized collectively
by the Domain Intelligence Agent.
"""

from .base import BaseScalingFactors, MathematicalConstants


class DomainAdaptiveConstants:
    """Constants that should be learned from domain analysis"""

    # AUTO-GENERATION POTENTIAL: VERY HIGH
    # These work together as a group and should be optimized collectively

    # INTERDEPENDENT GROUP 1: Entity Extraction Thresholds
    # These thresholds should be learned from domain-specific entity density and quality
    ENTITY_CONFIDENCE_THRESHOLD = 0.8  # LEARNABLE: domain entity patterns
    RELATIONSHIP_CONFIDENCE_THRESHOLD = 0.7  # LEARNABLE: domain relationship patterns
    MIN_RELATIONSHIP_STRENGTH = 0.5  # LEARNABLE: domain relationship quality

    # INTERDEPENDENT GROUP 2: Document Processing Parameters (derived from base constants)
    # These should be optimized together based on document characteristics
    DEFAULT_CHUNK_SIZE = int(
        MathematicalConstants.BASE_CHUNK_SIZE * BaseScalingFactors.STANDARD_CHUNK_FACTOR
    )  # 1000
    DEFAULT_CHUNK_OVERLAP = int(DEFAULT_CHUNK_SIZE * 0.2)  # 200 (20% of chunk size)
    MAX_ENTITIES_PER_CHUNK = int(MathematicalConstants.BASE_RESULT_COUNT * 2)  # 20
    MIN_ENTITY_LENGTH = 2  # LEARNABLE: domain-specific entity patterns
    MAX_ENTITY_LENGTH = 100  # LEARNABLE: domain-specific entity patterns

    # INTERDEPENDENT GROUP 3: Search Quality Thresholds
    # These work together to define search quality for specific domains
    RESULT_RELEVANCE_THRESHOLD = 0.6  # LEARNABLE: domain relevance patterns
    MIN_CONFIDENCE_THRESHOLD = 0.1  # LEARNABLE: minimum viable confidence for domain

    # INTERDEPENDENT GROUP 4: Domain Classification Thresholds (derived from base confidence)
    # These should be learned from multi-domain analysis
    DOMAIN_DETECTION_THRESHOLD = (
        MathematicalConstants.BASE_CONFIDENCE
        + BaseScalingFactors.STATISTICAL_CONFIDENCE_OFFSET
    )  # 0.75
    MIN_DOMAIN_CONFIDENCE = MathematicalConstants.BASE_CONFIDENCE  # 0.7
    DOMAIN_CLASSIFICATION_THRESHOLD = 0.6  # LEARNABLE: domain boundary definitions
    TECHNICAL_CONTENT_SIMILARITY_THRESHOLD = (
        0.8  # LEARNABLE: technical vs general content patterns
    )


class ContentAnalysisAdaptiveConstants:
    """Content analysis parameters that should adapt to corpus characteristics"""

    # AUTO-GENERATION POTENTIAL: HIGH
    # These should be learned from corpus analysis and document structure patterns

    # INTERDEPENDENT GROUP: Document Size Classifications
    # Only keeping used thresholds
    SHORT_DOCUMENT_WORD_THRESHOLD = 100  # LEARNABLE: corpus length distribution

    # INTERDEPENDENT GROUP: Complexity Analysis Thresholds
    # These should be learned from content complexity patterns in the domain
    MEDIUM_COMPLEXITY_THRESHOLD = 0.4  # LEARNABLE: domain complexity distribution
    HIGH_SIMILARITY_THRESHOLD = 0.4  # LEARNABLE: domain similarity patterns
    TECHNICAL_DENSITY_THRESHOLD = 0.1  # LEARNABLE: domain technical content patterns

    # LEARNABLE: Optimal chunk sizes based on document structure analysis (derived from base)
    OPTIMAL_CHUNK_SIZE_MIN = MathematicalConstants.BASE_CHUNK_SIZE  # 500
    OPTIMAL_CHUNK_SIZE_MAX = int(
        MathematicalConstants.BASE_CHUNK_SIZE * BaseScalingFactors.LARGE_CHUNK_FACTOR
    )  # 2000


# Export all constants
__all__ = [
    "DomainAdaptiveConstants",
    "ContentAnalysisAdaptiveConstants",
]
