{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "195035026527071851"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "principalId": {
      "type": "string"
    },
    "resourcePrefix": {
      "type": "string"
    }
  },
  "variables": {
    "config": {
      "searchSku": "basic",
      "searchReplicas": 1,
      "searchPartitions": 1,
      "storageSku": "Standard_LRS",
      "storageAccessTier": "Cool",
      "keyVaultSku": "standard",
      "logRetentionDays": 30
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Universal RAG System Identity"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('log-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[variables('config').logRetentionDays]",
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Centralized logging for Universal RAG"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('appi-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName')))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Application performance monitoring"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('config').searchSku]"
      },
      "properties": {
        "replicaCount": "[variables('config').searchReplicas]",
        "partitionCount": "[variables('config').searchPartitions]",
        "hostingMode": "default",
        "publicNetworkAccess": "enabled",
        "semanticSearch": "disabled",
        "authOptions": {
          "aadOrApiKey": {
            "aadAuthFailureMode": "http401WithBearerChallenge"
          }
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Vector search and full-text search for maintenance data"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('config').storageSku]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "[variables('config').storageAccessTier]",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "defaultToOAuthAuthentication": false,
        "dnsEndpointType": "Standard",
        "minimumTlsVersion": "TLS1_2",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "publicNetworkAccess": "Enabled",
        "supportsHttpsTrafficOnly": true
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Data storage for RAG system (raw data, processed data, models)"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)), 'default')]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": true,
          "days": 7
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)), 'default', format('maintie-{0}-rawdata', parameters('environmentName')))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)), 'default', format('maintie-{0}-processed', parameters('environmentName')))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)), 'default', format('maintie-{0}-models', parameters('environmentName')))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)), 'default')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8))]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "[variables('config').keyVaultSku]"
        },
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enablePurgeProtection": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Secure storage of secrets, keys, and certificates"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]",
      "name": "[guid(resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), 'Search Index Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8ebe5a00-799e-43f5-93ac-243d3dce84a7')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName')))]",
        "[resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]",
      "name": "[guid(resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), 'Search Service Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName')))]",
        "[resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), 'Storage Blob Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8)))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), 'Key Vault Secrets Officer')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8)))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8))), parameters('principalId'), 'Key Vault Secrets Officer')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
        "principalId": "[parameters('principalId')]",
        "principalType": "User"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8)))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]",
      "name": "[guid(resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')))), parameters('principalId'), 'Search Index Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8ebe5a00-799e-43f5-93ac-243d3dce84a7')]",
        "principalId": "[parameters('principalId')]",
        "principalType": "User"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]",
      "name": "[guid(resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')))), parameters('principalId'), 'Search Service Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0')]",
        "principalId": "[parameters('principalId')]",
        "principalType": "User"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10))), parameters('principalId'), 'Storage Blob Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[parameters('principalId')]",
        "principalType": "User"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10)))]"
      ]
    }
  ],
  "outputs": {
    "managedIdentityId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName')))]"
    },
    "managedIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2023-01-31').clientId]"
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2023-01-31').principalId]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')))]"
    },
    "searchEndpoint": {
      "type": "string",
      "value": "[format('https://{0}.search.windows.net/', format('srch-{0}-{1}-{2}', parameters('resourcePrefix'), parameters('environmentName'), uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName'))))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10))]"
    },
    "storageAccountEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('st{0}{1}', take(replace(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), '_', ''), 8), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 10))), '2023-01-01').primaryEndpoints.blob]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8))]"
    },
    "keyVaultEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', take(replace(format('{0}{1}', parameters('resourcePrefix'), parameters('environmentName')), '-', ''), 12), take(uniqueString(resourceGroup().id, parameters('resourcePrefix'), parameters('environmentName')), 8))), '2023-07-01').vaultUri]"
    },
    "appInsightsName": {
      "type": "string",
      "value": "[format('appi-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('appi-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2020-02-02').ConnectionString]"
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('appi-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2020-02-02').InstrumentationKey]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))), '2023-09-01').customerId]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[format('log-{0}-{1}', parameters('resourcePrefix'), parameters('environmentName'))]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "not-available-in-student-subscription"
    },
    "containerRegistryEndpoint": {
      "type": "string",
      "value": "not-available-in-student-subscription"
    }
  }
}