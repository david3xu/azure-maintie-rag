name: Azure Universal RAG CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: prod
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio black isort

    - name: Setup Node.js for frontend
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Code quality checks
      timeout-minutes: 10
      run: |
        black . --check --fast
        isort . --check-only --fast
        cd frontend && npm run lint

    - name: Run domain bias validation
      timeout-minutes: 5
      run: |
        ./scripts/hooks/pre-commit-domain-bias-check.sh

    - name: Build frontend
      timeout-minutes: 10
      run: |
        cd frontend
        npm run build

    - name: Run unit tests
      timeout-minutes: 15
      run: |
        pytest -m unit -v --tb=short

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Install Azure Developer CLI
      uses: azure/setup-azd@v0.1.0

    - name: Provision Infrastructure
      run: azd provision --no-prompt
      env:
        AZURE_ENV_NAME: prod
        AZURE_LOCATION: westus2
        AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy Application
      run: azd deploy --no-prompt
      env:
        AZURE_ENV_NAME: prod

    - name: Run integration tests
      run: |
        pytest -m azure_validation -v --tb=short
      env:
        AZURE_ENV_NAME: prod

    - name: Run performance tests
      run: |
        pytest -m performance -v --tb=short
      continue-on-error: true
      env:
        AZURE_ENV_NAME: prod

    - name: Generate deployment report
      run: |
        make health
        make session-report
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          logs/
          test_results/