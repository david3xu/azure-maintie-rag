# Azure Developer CLI (azd) configuration for Universal RAG System
name: azure-maintie-rag
metadata:
  template: azure-search-openai-demo@main
  description: "Azure Universal RAG system with knowledge graphs, vector search, and GNN training"

# Services to deploy - Universal RAG Backend + Frontend
services:
  backend:
    project: .
    language: py
    host: containerapp
    docker:
      path: ./Dockerfile
  frontend:
    project: ./frontend
    language: js  
    host: containerapp
    docker:
      path: ./frontend/Dockerfile

# Infrastructure configuration
infra:
  provider: bicep
  path: ./infra

# Environment variables that will be set by azd
env:
  # Azure Resource Configuration
  AZURE_LOCATION: westus2
  AZURE_RESOURCE_GROUP_PREFIX: rg-maintie-rag
  
  # Application Configuration
  OPENAI_MODEL_DEPLOYMENT: gpt-4o
  EMBEDDING_MODEL_DEPLOYMENT: text-embedding-ada-002
  SEARCH_INDEX_NAME: maintie-index
  COSMOS_DATABASE_NAME: maintie-rag-db
  COSMOS_GRAPH_NAME: knowledge-graph
  
  # Container Configuration
  BACKEND_IMAGE_NAME: azure-maintie-rag-backend
  BACKEND_PORT: 8000

# Deployment hooks
hooks:
  prepackage:
    shell: sh
    run: |
      echo "üì¶ Building Azure Universal RAG container..."
      # Ensure requirements are up to date for the API service
      if [ -f "requirements.txt" ]; then
        echo "Building Python Azure Universal RAG API for container deployment..."
      fi
      
  preprovision:
    shell: sh
    run: |
      echo "üèóÔ∏è Preparing Azure Universal RAG infrastructure..."
      echo "Environment: ${AZURE_ENV_NAME}"
      echo "Location: ${AZURE_LOCATION}"
      
  postprovision:
    shell: sh
    run: |
      echo "üîß Configuring deployed services..."
      # Update backend configuration with deployed endpoints
      if [ -f "./scripts/update-env-from-deployment.sh" ]; then
        ./scripts/update-env-from-deployment.sh
      fi
      
  postdeploy:
    shell: sh
    run: |
      echo "‚úÖ Deployment complete!"
      echo "Backend URL: ${SERVICE_BACKEND_URI}"
      echo "Frontend URL: ${SERVICE_FRONTEND_URI}"
      echo ""
      echo "üîó Quick verification commands:"
      echo "  Health check: curl \${SERVICE_BACKEND_URI}/health"
      echo "  Admin panel: open \${SERVICE_FRONTEND_URI}"
      echo ""
      echo "üìä Resource group: ${AZURE_RESOURCE_GROUP}"
      echo "üåç Environment: ${AZURE_ENV_NAME}"